cache:
  key: "$CI_COMMIT_REF_NAME-$CI_JOB_STAGE"
  paths:
    - /cache/composer

before_script:
  - apk add git --update

stages:
  - test
  - release

.test: &testing
  stage: test
  image: php:$DOCKER_TAG
  only:
    - branches
  variables:
    TYPO3_PATH_WEB: "$PWD/.Build/Web"
    TYPO3_PATH_ROOT: "$PWD/.Build/Web"
    COMPOSER_CACHE_DIR: "/cache/composer"
  before_script:
    - apk add git --update
    - php -r "copy('https://getcomposer.org/composer.phar', 'composer.phar');"
    - php composer.phar config minimum-stability ${COMPOSER_STABILITY}
    - php composer.phar config cache-dir /cache/composer
    - php composer.phar remove --dev nimut/testing-framework
    - php composer.phar remove typo3/cms-core
    - rm composer.lock
    - rm -Rf .Build/vendor/
    - php composer.phar require ${TYPO3_VERSION} --update-with-dependencies
    - php composer.phar require --dev nimut/testing-framework:${NIMUT_TESTFRAMEWORK_VERSION} --update-with-dependencies
    - php composer.phar require --dev squizlabs/php_codesniffer
  script:
    - .Build/bin/phpunit -c Configuration/.Build/Tests/UnitTests.xml
    - .Build/bin/phpcs --standard=PSR2 --extensions=php *
  allow_failure: true

test:php74:typo3_11:
  <<: *testing
  variables:
    DOCKER_TAG: "7.4"
    TYPO3_VERSION: typo3/cms-core:^11.5
    NIMUT_TESTFRAMEWORK_VERSION: ^6
    COMPOSER_STABILITY: stable

test:php80:typo3_11:
  <<: *testing
  variables:
    DOCKER_TAG: "8.0"
    TYPO3_VERSION: typo3/cms-core:^11.5
    NIMUT_TESTFRAMEWORK_VERSION: ^6
    COMPOSER_STABILITY: stable

"Publish new version to TER":
  stage: release
  image: composer:2
  variables:
    TYPO3_EXTENSION_KEY: "be_secure_pw"
  only:
    - tags
  before_script:
    - composer global require typo3/tailor
  script:
    - >
      if [ -n "$CI_COMMIT_TAG" ] && [ -n "$TYPO3_API_TOKEN" ] && [ -n "$TYPO3_EXTENSION_KEY" ]; then
        echo -e "Preparing upload of release ${CI_COMMIT_TAG} to TER\n"
        # Cleanup before we upload
        git reset --hard HEAD && git clean -fx
        # Upload
        TAG_MESSAGE=`git tag -n10 -l $CI_COMMIT_TAG | sed 's/^[0-9.]*[ ]*//g'`
        echo "Uploading release ${CI_COMMIT_TAG} to TER"
        /tmp/vendor/bin/tailor ter:publish --comment "$TAG_MESSAGE" "$CI_COMMIT_TAG" "$TYPO3_EXTENSION_KEY"
      fi;
